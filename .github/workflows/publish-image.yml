name: Publish image

on:
  workflow_dispatch:
    inputs:
      manualTag:
        description: 'Manual Tag'
        required: true
      autoWithLatestTag:
        description: 'Auto Add Latest Tag'
        required: true
        default: true
        type: boolean
  release:
    types: [published]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

jobs:
  PublishImage:
    runs-on: ubuntu-latest
    steps:
      - name: GetTargetVersion
        id: getTargetVersion
        run: |
          TargetVersion=""
          if [ "${{ github.event.release.tag_name }}" ] ; then
            TargetVersion=${{ github.event.release.tag_name }}
          fi
          if [ "${{ github.event.inputs.manualTag }}" ] ; then
            TargetVersion=${{ github.event.inputs.manualTag }}
          fi
          echo "TargetVersion: $TargetVersion"
          echo "TargetVersion=$TargetVersion" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.getTargetVersion.outputs.TargetVersion }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Generate tags
        id: tags
        run: |
          targetVersion="${{ steps.getTargetVersion.outputs.TargetVersion }}"
          dockerImage="tianyago/naiveproxy-docker"
          dockerTagWithVersion="$dockerImage:$targetVersion"
          dockerTagWithLatest=""
          if [ "${{ github.event.inputs.autoWithLatestTag }}" == "true" ] ; then
            dockerTagWithLatest="$dockerImage:latest"
          fi
          echo "dockerTagWithVersion=$dockerTagWithVersion" >> $GITHUB_OUTPUT
          echo "dockerTagWithLatest=$dockerTagWithLatest" >> $GITHUB_OUTPUT
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.tags.outputs.dockerTagWithVersion }}
            ${{ steps.tags.outputs.dockerTagWithLatest }}
